openapi: 3.0.0
info:
  version: 1.0.0
  title: Job list
  description: >-
    This is an OpenAPI Specification created by oas-wizard
    (https://github.com/pafmon/oas-wizard)  
  contact:
    name: PabloFM
    email: pablofm@us.es
    url: 'http://www.isa.us.es'
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
paths:
  /api/v1/jobs:
    get:
      description: Returns all jobs
      operationId: getJobs
      responses:
        '200':
          description: Job List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/job'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: Creates a new job
      operationId: addJob
      responses:
        '200':
          description: job created
        '201':
          description: job created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job'
        description: Job to be created
        required: true
  '/api/v1/jobs/{id}/results':
    get:
      description: Returns a job by id
      operationId: findJobResultByid
      x-router-controller: apiv1jobsidController
      parameters:
        - name: id
          in: path
          description: id of job to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/jobs/{jobId}/resultProcessors':
    get:
      description: Returns a job by id
      operationId: getJobResultProcessors
      x-router-controller: resultProcessorController
      parameters:
        - name: jobId
          in: path
          description: id of job to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/any'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: Creates a new result processor
      operationId: addJobResultProcessor
      x-router-controller: resultProcessorController
      parameters:
        - name: jobId
          in: path
          description: id of job to add Result processor
          required: true
          schema:
            type: string
      responses:
        '200':
          description: job created
        '201':
          description: job created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: resultProcessor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/any'
        description: Result processor to be created
        required: true
  '/api/v1/jobs/{jobId}/resultProcessors/{name}':
    get:
      description: Returns a job result processor by name
      operationId: findJobResultProcessorByName
      x-router-controller: resultProcessorController
      parameters:
        - name: jobId
          in: path
          description: id of job to fetch
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: name of the result processor 
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job Result processor returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/any'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
  '/api/v1/jobs/{jobId}/resultProcessors/{name}/process':
    post:
      description: Executes a result processor
      operationId: processResultProcessor
      x-router-controller: resultProcessorController
      parameters:
        - name: jobId
          in: path
          description: id of job to add Result processor
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: name of the result processor
          required: true
          schema:
            type: string
      responses:
        '200':
          description: job created
        '201':
          description: job created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/any'
        description: Params for the processor
        required: false
  '/api/v1/jobs/{id}':
    get:
      description: Returns a job by id
      operationId: findJobByid
      parameters:
        - name: id
          in: path
          description: id of job to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    delete:
      description: deletes a single job based on the id
      operationId: deleteJob
      parameters:
        - name: id
          in: path
          description: ID of job to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: job deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    put:
      description: Update a job based on its id
      operationId: updateJob
      parameters:
        - name: id
          in: path
          description: ID of job to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: job updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job'
        description: Job to be updated
        required: true
components:
  schemas:
    any:
      type: object
    errorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    job:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
        code:
          type: string
          minLength: 1
        parametrization:
          type: array
          minItems: 1
          items:
            required:
              - parameters
            properties:
              parameters:
                type: array
                minItems: 1
                items:
                  required:
                    - name
                    - type
                    - definition
                  properties:
                    name:
                      type: string
                      minLength: 1
                    type:
                      type: string
                      minLength: 1
                    definition:
                      type: string
                      minLength: 1
          required:
            - parameters
        configuration:
          type: object
          properties:
            limits:
              type: object
              properties:
                parallelExecutions:
                  oneOf:
                    - type: string
                    - type: integer
                virtualUserExecutions:
                  oneOf:
                    - type: string
                    - type: integer
                requestPerSecond:
                  oneOf:
                    - type: string
                    - type: integer
              required:
                - parallelExecutions
                - virtualUserExecutions
                - requestPerSecond
          required:
            - limits
        running:
          type: boolean
      required:
        - title
        - code
        - parametrizationGroups
        - configuration
